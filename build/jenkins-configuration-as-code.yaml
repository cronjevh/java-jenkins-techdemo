credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: "github"
          password: "__github-pass__"
          scope: GLOBAL
          username: "cronjevh"
      - basicSSHUserPrivateKey:
          id: "github-ssh"
          privateKeySource:
            directEntry:
              privateKey: "__github-ssh__"
          scope: GLOBAL
          username: "cronjevh"
      - string:
          id: "jenkins-k8s-agent-serviceaccount"
          scope: GLOBAL
          secret: "__jenkins-k8s-agent-serviceaccount-token__"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  clouds:
  - kubernetes:
      containerCap: 5
      containerCapStr: "5"
      credentialsId: " jenkins-k8s-agent-serviceaccount"
      jenkinsUrl: "http://jenkins-svc.jenkins-controller.svc.cluster.local:8080"
      name: "kubernetes"
      namespace: "jenkins-agent"
      serverCertificate: |-
        __jenkins-k8s-agent-serviceaccount-crt__
      webSocket: true
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "jenkins.diagnostics.ControllerExecutorsNoAgents"
  - "jenkins.diagnostics.SecurityIsOffMonitor"
  - "jenkins.diagnostics.RootUrlNotSetMonitor"
  - "jenkins.diagnostics.ControllerExecutorsAgents"
  labelAtoms:
  - name: "master"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: false
  scmCheckoutRetryCount: 0
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubPluginConfig:
    hookUrl: "http://localhost:30808/github-webhook/"
  gitSCM:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  pipelineMaven:
    triggerDownstreamUponResultAborted: false
    triggerDownstreamUponResultFailure: false
    triggerDownstreamUponResultNotBuilt: false
    triggerDownstreamUponResultSuccess: true
    triggerDownstreamUponResultUnstable: false
  powerShellInstallation:
    installations:
    - home: "pwsh"
      name: "DefaultLinux"